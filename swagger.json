{
  "swagger": "2.0",
  "info": {
    "title": "Casfod Staff Portal",
    "description": "Comprehensive API documentation for Casfod Staff portal",
    "version": "1.0.0"
  },
  "host": "casfod.onrender.com",
  "basePath": "/api/v1/casfod/",
  "schemes": ["https"],
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json"],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Enter your bearer token in the format **Bearer &lt;token&gt;**"
    }
  },
  "security": [{ "Bearer": [] }],
  "paths": {
    "/users/login": {
      "post": {
        "tags": ["User Auth"],
        "description": "Authenticate a user and return a JWT token. The token should be included in the Authorization header for subsequent requests.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User login credentials including email and password.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": { "type": "string" },
                "password": { "type": "string" }
              }
            }
          }
        ],
        "responses": {
          "200": { "description": "Login successful." },
          "400": { "description": "Invalid login credentials." },
          "404": { "description": "User not found." },
          "500": { "description": "Internal server error." }
        }
      }
    },
    "/users/logout": {
      "get": {
        "tags": ["User Auth"],
        "description": "Log out user. The user has to be logged in to log out.",
        "produces": ["application/json"],
        "responses": {
          "200": { "description": "User logged out successfully." },
          "401": { "description": "Unauthorized access." },
          "500": { "description": "Internal server error." }
        }
      }
    },
    "/users/forgotPassword": {
      "post": {
        "tags": ["User Auth"],
        "description": "Request a password reset link for a user.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User email to send the password reset link.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": { "type": "string" }
              }
            }
          }
        ],
        "responses": {
          "200": { "description": "Password reset link sent successfully." },
          "404": { "description": "User not found." },
          "500": { "description": "Internal server error." }
        }
      }
    },
    "/users/resetPassword/{token}": {
      "patch": {
        "tags": ["User Auth"],
        "description": "Reset a user's password using the token sent to their email.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Token sent to the user's email for password reset."
          },
          {
            "name": "body",
            "in": "body",
            "description": "New password details.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "password": { "type": "string" },
                "passwordConfirm": { "type": "string" }
              }
            }
          }
        ],
        "responses": {
          "200": { "description": "Password reset successfully." },
          "400": { "description": "Invalid or expired token." },
          "500": { "description": "Internal server error." }
        }
      }
    },
    "/users/updatePassword": {
      "patch": {
        "tags": ["User Auth"],
        "description": "Update a user's password. The user must be logged in.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Current and new password details.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "currentPassword": { "type": "string" },
                "newPassword": { "type": "string" },
                "newPasswordConfirm": { "type": "string" }
              }
            }
          }
        ],
        "responses": {
          "200": { "description": "Password updated successfully." },
          "400": { "description": "Invalid current password." },
          "401": { "description": "Unauthorized access." },
          "500": { "description": "Internal server error." }
        }
      }
    },
    "/users/addUser": {
      "post": {
        "tags": ["User Management"],
        "description": "Add a new user. Restricted to SUPER-ADMIN.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User details including name, email, role, and password.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": { "type": "string" },
                "email": { "type": "string" },
                "role": { "type": "string", "enum": ["ADMIN", "STAFF"] },
                "password": { "type": "string" },
                "passwordConfirm": { "type": "string" }
              }
            }
          }
        ],
        "responses": {
          "201": { "description": "User created successfully." },
          "400": { "description": "Invalid input." },
          "401": { "description": "Unauthorized access." },
          "500": { "description": "Internal server error." }
        }
      }
    },
    "/users/deleteUser/{userID}": {
      "patch": {
        "tags": ["User Management"],
        "description": "Delete a user. Restricted to SUPER-ADMIN.",
        "produces": ["application/json"],
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User ID to delete."
          }
        ],
        "responses": {
          "200": { "description": "User deleted successfully." },
          "401": { "description": "Unauthorized access." },
          "404": { "description": "User not found." },
          "500": { "description": "Internal server error." }
        }
      }
    },
    "/users/updateUserRole/{userID}": {
      "patch": {
        "tags": ["User Management"],
        "description": "Update a user's role. Restricted to SUPER-ADMIN.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User ID to update."
          },
          {
            "name": "body",
            "in": "body",
            "description": "New role for the user.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "role": { "type": "string", "enum": ["ADMIN", "STAFF"] }
              }
            }
          }
        ],
        "responses": {
          "200": { "description": "User role updated successfully." },
          "401": { "description": "Unauthorized access." },
          "404": { "description": "User not found." },
          "500": { "description": "Internal server error." }
        }
      }
    },
    "/users": {
      "get": {
        "tags": ["User Management"],
        "description": "Retrieve all users. Restricted to SUPER-ADMIN and ADMIN.",
        "produces": ["application/json"],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": { "description": "Success." },
          "401": { "description": "Unauthorized access." },
          "500": { "description": "Internal server error." }
        }
      }
    },
    "/users/me": {
      "get": {
        "tags": ["User"],
        "description": "Retrieve the logged-in user's details.",
        "produces": ["application/json"],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": { "description": "User details retrieved successfully." },
          "401": { "description": "Unauthorized access." },
          "500": { "description": "Internal server error." }
        }
      }
    }
  }
}
